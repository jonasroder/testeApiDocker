version: "3.8"

services:
  client1_db:
    image: postgres:16
    container_name: client1_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: client1db
    volumes:
      - client1_data:/var/lib/postgresql/data

  client2_db:
    image: postgres:16
    container_name: client2_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: client2db
    volumes:
      - client2_data:/var/lib/postgresql/data

  client1_app:
    build:
      context: .
      dockerfile: Dockerfile
    image: jonas/testeapi:client1
    container_name: client1_app
    restart: unless-stopped
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      ConnectionStrings__DefaultConnection: Host=client1_db;Database=client1db;Username=postgres;Password=postgres
    depends_on:
      - client1_db
    ports:
      - "8080:80"

  client2_app:
    build:
      context: .
      dockerfile: Dockerfile
    image: jonas/testeapi:client2
    container_name: client2_app
    restart: unless-stopped
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      ConnectionStrings__DefaultConnection: Host=client2_db;Database=client2db;Username=postgres;Password=postgres
    depends_on:
      - client2_db
    ports:
      - "8081:80"

volumes:
  client1_data:
  client2_data:
